name: 'Tests'

on:
  pull_request:

# Cancel in-progress jobs when a new commit is pushed
concurrency:
  group: monorepo-tests-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

jobs:
  run:
    name: "Monorepo"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true # Fail the entire workflow if any job fails
      matrix:
        include:
          - php-version: '8.4'
            stability: prefer-stable
    services:
      kafka:
        image: bitnami/kafka:latest
        options: >-
          --env ALLOW_PLAINTEXT_LISTENER=yes
          --env KAFKA_ENABLE_KRAFT=yes
          --env KAFKA_CFG_NODE_ID=0
          --env KAFKA_CFG_PROCESS_ROLES=controller,broker
          --env KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
          --env KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093
          --env KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
          --env KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
          --env KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@127.0.0.1:9093
          --health-cmd="kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 9092:9092
      rabbitmq:
        image: rabbitmq:3.11-management-alpine
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: "secret"
          MYSQL_USER: "ecotone"
          MYSQL_PASSWORD: "secret"
          MYSQL_DATABASE: "ecotone"
          DB_PORT: 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
      postgres:
        image: simplycodedsoftware/postgres:16.1
        env:
          POSTGRES_USER: ecotone
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      localstack:
        image: localstack/localstack:3.0.0
        env:
          SERVICES: 'sqs,sns'
        ports:
          - "4566:4566"
          - "4510-4559:4510-4559"
      redis:
        image: redis:7-alpine
        ports:
          - '6379:6379'
    env:
      RABBIT_HOST: amqp://127.0.0.1:5672
      SQS_DSN: sqs:?key=key&secret=secret&region=us-east-1&endpoint=http://127.0.0.1:4566&version=latest
      REDIS_DSN: redis://127.0.0.1:6379
      KAFKA_DSN: 127.0.0.1:9092
    steps:
    - name: PHP ${{ matrix.php-version }} - ${{ matrix.stability }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: grpc, rdkafka
        coverage: none

    - name: Install OpenSSH (For Kafka)
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends openssh-client

    - name: Install DB clients
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends postgresql-client mysql-client

    - uses: actions/checkout@v5

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Install dependencies
      run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction

    - name: Run tests
      run: |
        source .github/scripts/run-tests.sh
        
        # Create secondary databases
        psql 'postgresql://ecotone:secret@127.0.0.1:5432/postgres' -v ON_ERROR_STOP=1 -c 'CREATE DATABASE ecotone_secondary OWNER ecotone'
        mysql -h '127.0.0.1' -uroot -psecret -e "CREATE DATABASE ecotone_secondary; GRANT ALL PRIVILEGES ON ecotone_secondary.* TO 'ecotone'@'%'; FLUSH PRIVILEGES;"
        
        PG_ENV="DATABASE_DSN='pgsql://ecotone:secret@127.0.0.1:5432/ecotone?serverVersion=16' SECONDARY_DATABASE_DSN='mysql://ecotone:secret@127.0.0.1:3306/ecotone_secondary?serverVersion=8.0'"
        MYSQL_ENV="DATABASE_DSN='mysql://ecotone:secret@127.0.0.1:3306/ecotone?serverVersion=8.0' SECONDARY_DATABASE_DSN='pgsql://ecotone:secret@127.0.0.1:5432/ecotone_secondary?serverVersion=16'"
        
        parallel -j +3 <<EOF
        _run_tests 'PHPStan' 'vendor/bin/phpstan analyse -c phpstan.neon'
        _run_tests 'PHPUnit (Postgres)' "$PG_ENV vendor/bin/phpunit --no-coverage"
        _run_tests 'Behat (Postgres)' "$PG_ENV vendor/bin/behat -vvv"
        _run_tests 'PHPUnit (MySQL)' "$MYSQL_ENV vendor/bin/phpunit --no-coverage"
        _run_tests 'Behat (MySQL)' "$MYSQL_ENV vendor/bin/behat -vvv"
        EOF
