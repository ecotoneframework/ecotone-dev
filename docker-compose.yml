version: "3.8"

services:
  app:
    image: simplycodedsoftware/php:8.4.6
    volumes:
      - "$PWD:/data/app"
    working_dir: "/data/app"
    command: sleep 99999
    container_name: "ecotone_development"
    user: "${USER_PID:-1000}:${USER_PID:-1000}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # 172.17.0.1
    environment:
      COMPOSE_HTTP_TIMEOUT: 9999
      COMPOSER_ROOT_VERSION: 'dev-main'
      RABBIT_HOST: "amqp://rabbitmq:5672"
      DATABASE_DSN: pgsql://ecotone:secret@database:5432/ecotone?serverVersion=16
      SECONDARY_DATABASE_DSN: mysql://ecotone:secret@database-mysql:3306/ecotone?serverVersion=8.0
      DATABASE_MYSQL: mysql://ecotone:secret@database-mysql:3306/ecotone?serverVersion=8.0
      SQS_DSN: sqs:?key=key&secret=secret&region=us-east-1&endpoint=http://localstack:4566&version=latest
      REDIS_DSN: redis://redis:6379
      KAFKA_DSN: kafka:9092
      APP_MERGE_PLUGIN: "yes"
    env_file:
      - ".env"
  app8_1:
    image: simplycodedsoftware/php:8.1.29
    volumes:
      - "$PWD:/data/app"
    working_dir: "/data/app"
    command: sleep 99999
    container_name: "ecotone_development_8_1"
    user: "${USER_PID:-1000}:${USER_PID:-1000}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # 172.17.0.1
    environment:
      COMPOSE_HTTP_TIMEOUT: 9999
      COMPOSER_ROOT_VERSION: 'dev-main'
      RABBIT_HOST: "amqp://rabbitmq:5672"
      DATABASE_DSN: mysql://ecotone:secret@database-mysql:3306/ecotone?serverVersion=8.0
      SECONDARY_DATABASE_DSN: pgsql://ecotone:secret@database:5432/ecotone?serverVersion=16
      DATABASE_MYSQL: mysql://ecotone:secret@database-mysql:3306/ecotone?serverVersion=8.0
      SQS_DSN: sqs:?key=key&secret=secret&region=us-east-1&endpoint=http://localstack:4566&version=latest
      REDIS_DSN: redis://redis:6379
      KAFKA_DSN: kafka:9092
      APP_MERGE_PLUGIN: "yes"
    env_file:
      - ".env"
  database:
    image: simplycodedsoftware/postgres:16.1
    environment:
      POSTGRES_USER: "ecotone"
      POSTGRES_PASSWORD: "secret"
    ports:
      - "5432:5432"
  database-mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: "secret"
      MYSQL_USER: "ecotone"
      MYSQL_PASSWORD: "secret"
      MYSQL_DATABASE: "ecotone"
    ports:
      - "3306:3306"
  rabbitmq:
    build: ./.docker/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"
      - "5672:5672"
  localstack:
    image: localstack/localstack:3.0.0
    environment:
      LOCALSTACK_HOST: 'localstack'
      SERVICES: 'sqs,sns'
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
  collector:
    image: otel/opentelemetry-collector-contrib:0.73.0
    networks:
      - default
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./.docker/collector/otel-collector-config.yaml:/etc/otel-collector-config.yml
    ports:
      - "9411"   # Zipkin receiver
      - "4317:4317"        # OTLP gRPC receiver
      - "4318:4318" # OTLP/HTTP receiver
  zipkin:
    image: openzipkin/zipkin-slim
    networks:
      - default
    ports:
      - 9411:9411
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    networks:
      - default
    ports:
      - 16686:16686
  kafka:
    image: 'apache/kafka:3.9.0'
    ports:
      - '9094:9092'
    environment:
      - KAFKA_NODE_ID=0
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
    networks:
      - default
  kafdrop:
    image: 'obsidiandynamics/kafdrop:latest'
    ports:
      - '9999:9000'
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
    networks:
      - default